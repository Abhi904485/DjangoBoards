# Generated by Django 3.1 on 2020-11-27 05:30

import accounts.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('accounts', '0001_initial'), ('accounts', '0002_auto_20200508_1521')]

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_column='email', error_messages={}, max_length=254, unique=True, verbose_name='Email address')),
                ('first_name', models.CharField(blank=True, db_column='first_name', error_messages={}, max_length=30, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, db_column='last_name', error_messages={}, max_length=30, null=True, verbose_name='Last name')),
                ('username', models.CharField(blank=True, db_column='username', error_messages={}, max_length=100, null=True, verbose_name='Username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='date_joined', error_messages={}, verbose_name='Date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('is_staff', models.BooleanField(db_column='is_staff', default=False, error_messages={}, verbose_name='Is staff')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
            managers=[
                ('objects', accounts.manager.UserManager()),
            ],
        ),
    ]
